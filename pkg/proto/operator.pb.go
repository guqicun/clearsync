// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: operator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClearingEvent int32

const (
	ClearingEvent_CLEARING_EVENT_UNSPECIFIED                    ClearingEvent = 0
	ClearingEvent_CLEARING_EVENT_INSTANTIATED                   ClearingEvent = 1
	ClearingEvent_CLEARING_EVENT_ACCEPTED                       ClearingEvent = 2
	ClearingEvent_CLEARING_EVENT_FAILED                         ClearingEvent = 3
	ClearingEvent_CLEARING_EVENT_INITIATOR_FUNDED               ClearingEvent = 4
	ClearingEvent_CLEARING_EVENT_RESPONDER_FUNDED               ClearingEvent = 5
	ClearingEvent_CLEARING_EVENT_POSTFUND_PROPOSED              ClearingEvent = 6
	ClearingEvent_CLEARING_EVENT_AGREED_ON_POSTFUND             ClearingEvent = 7
	ClearingEvent_CLEARING_EVENT_MOVE_TO_OPERATIONAL            ClearingEvent = 8
	ClearingEvent_CLEARING_EVENT_PROCESS_MARGIN_CALL            ClearingEvent = 9
	ClearingEvent_CLEARING_EVENT_STARTED_SETTLEMENT             ClearingEvent = 10
	ClearingEvent_CLEARING_EVENT_PROCESS_POST_SETTLEMENT_MARGIN ClearingEvent = 11
	ClearingEvent_CLEARING_EVENT_FINALIZE_SETTLEMENT            ClearingEvent = 12
	ClearingEvent_CLEARING_EVENT_FAILED_SETTLEMENT              ClearingEvent = 13
	ClearingEvent_CLEARING_EVENT_CHALLENGE                      ClearingEvent = 14
	ClearingEvent_CLEARING_EVENT_FINALIZE                       ClearingEvent = 15
	ClearingEvent_CLEARING_EVENT_WITHDRAW                       ClearingEvent = 16
	ClearingEvent_CLEARING_EVENT_CLEAR_CHALLENGE                ClearingEvent = 17
	ClearingEvent_CLEARING_EVENT_TIMEOUT_CHALLENGE              ClearingEvent = 18
)

// Enum value maps for ClearingEvent.
var (
	ClearingEvent_name = map[int32]string{
		0:  "CLEARING_EVENT_UNSPECIFIED",
		1:  "CLEARING_EVENT_INSTANTIATED",
		2:  "CLEARING_EVENT_ACCEPTED",
		3:  "CLEARING_EVENT_FAILED",
		4:  "CLEARING_EVENT_INITIATOR_FUNDED",
		5:  "CLEARING_EVENT_RESPONDER_FUNDED",
		6:  "CLEARING_EVENT_POSTFUND_PROPOSED",
		7:  "CLEARING_EVENT_AGREED_ON_POSTFUND",
		8:  "CLEARING_EVENT_MOVE_TO_OPERATIONAL",
		9:  "CLEARING_EVENT_PROCESS_MARGIN_CALL",
		10: "CLEARING_EVENT_STARTED_SETTLEMENT",
		11: "CLEARING_EVENT_PROCESS_POST_SETTLEMENT_MARGIN",
		12: "CLEARING_EVENT_FINALIZE_SETTLEMENT",
		13: "CLEARING_EVENT_FAILED_SETTLEMENT",
		14: "CLEARING_EVENT_CHALLENGE",
		15: "CLEARING_EVENT_FINALIZE",
		16: "CLEARING_EVENT_WITHDRAW",
		17: "CLEARING_EVENT_CLEAR_CHALLENGE",
		18: "CLEARING_EVENT_TIMEOUT_CHALLENGE",
	}
	ClearingEvent_value = map[string]int32{
		"CLEARING_EVENT_UNSPECIFIED":                    0,
		"CLEARING_EVENT_INSTANTIATED":                   1,
		"CLEARING_EVENT_ACCEPTED":                       2,
		"CLEARING_EVENT_FAILED":                         3,
		"CLEARING_EVENT_INITIATOR_FUNDED":               4,
		"CLEARING_EVENT_RESPONDER_FUNDED":               5,
		"CLEARING_EVENT_POSTFUND_PROPOSED":              6,
		"CLEARING_EVENT_AGREED_ON_POSTFUND":             7,
		"CLEARING_EVENT_MOVE_TO_OPERATIONAL":            8,
		"CLEARING_EVENT_PROCESS_MARGIN_CALL":            9,
		"CLEARING_EVENT_STARTED_SETTLEMENT":             10,
		"CLEARING_EVENT_PROCESS_POST_SETTLEMENT_MARGIN": 11,
		"CLEARING_EVENT_FINALIZE_SETTLEMENT":            12,
		"CLEARING_EVENT_FAILED_SETTLEMENT":              13,
		"CLEARING_EVENT_CHALLENGE":                      14,
		"CLEARING_EVENT_FINALIZE":                       15,
		"CLEARING_EVENT_WITHDRAW":                       16,
		"CLEARING_EVENT_CLEAR_CHALLENGE":                17,
		"CLEARING_EVENT_TIMEOUT_CHALLENGE":              18,
	}
)

func (x ClearingEvent) Enum() *ClearingEvent {
	p := new(ClearingEvent)
	*p = x
	return p
}

func (x ClearingEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClearingEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_enumTypes[0].Descriptor()
}

func (ClearingEvent) Type() protoreflect.EnumType {
	return &file_operator_proto_enumTypes[0]
}

func (x ClearingEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClearingEvent.Descriptor instead.
func (ClearingEvent) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{0}
}

type ClearingState int32

const (
	ClearingState_CLEARING_STATE_UNSPECIFIED                       ClearingState = 0
	ClearingState_CLEARING_STATE_INSTANTIATED                      ClearingState = 1
	ClearingState_CLEARING_STATE_ACCEPTED                          ClearingState = 2
	ClearingState_CLEARING_STATE_FAILED                            ClearingState = 3
	ClearingState_CLEARING_STATE_INITIATOR_FUNDED                  ClearingState = 4
	ClearingState_CLEARING_STATE_FUNDED                            ClearingState = 5
	ClearingState_CLEARING_STATE_OPERATIONAL                       ClearingState = 6
	ClearingState_CLEARING_STATE_ISSUING_MARGIN_CALL               ClearingState = 7
	ClearingState_CLEARING_STATE_PROCESSING_MARGIN_CALL            ClearingState = 8
	ClearingState_CLEARING_STATE_ACTIVE_SETTLEMENT                 ClearingState = 9
	ClearingState_CLEARING_STATE_ISSUING_POST_SETTLEMENT_MARGIN    ClearingState = 10
	ClearingState_CLEARING_STATE_PROCESSING_POST_SETTLEMENT_MARGIN ClearingState = 11
	ClearingState_CLEARING_STATE_CHALLENGING                       ClearingState = 12
	ClearingState_CLEARING_STATE_FINALIZING                        ClearingState = 13
	ClearingState_CLEARING_STATE_WITHDRAWING                       ClearingState = 14
	ClearingState_CLEARING_STATE_CONCLUDING                        ClearingState = 15
	ClearingState_CLEARING_STATE_DEFAULT                           ClearingState = 16
)

// Enum value maps for ClearingState.
var (
	ClearingState_name = map[int32]string{
		0:  "CLEARING_STATE_UNSPECIFIED",
		1:  "CLEARING_STATE_INSTANTIATED",
		2:  "CLEARING_STATE_ACCEPTED",
		3:  "CLEARING_STATE_FAILED",
		4:  "CLEARING_STATE_INITIATOR_FUNDED",
		5:  "CLEARING_STATE_FUNDED",
		6:  "CLEARING_STATE_OPERATIONAL",
		7:  "CLEARING_STATE_ISSUING_MARGIN_CALL",
		8:  "CLEARING_STATE_PROCESSING_MARGIN_CALL",
		9:  "CLEARING_STATE_ACTIVE_SETTLEMENT",
		10: "CLEARING_STATE_ISSUING_POST_SETTLEMENT_MARGIN",
		11: "CLEARING_STATE_PROCESSING_POST_SETTLEMENT_MARGIN",
		12: "CLEARING_STATE_CHALLENGING",
		13: "CLEARING_STATE_FINALIZING",
		14: "CLEARING_STATE_WITHDRAWING",
		15: "CLEARING_STATE_CONCLUDING",
		16: "CLEARING_STATE_DEFAULT",
	}
	ClearingState_value = map[string]int32{
		"CLEARING_STATE_UNSPECIFIED":                       0,
		"CLEARING_STATE_INSTANTIATED":                      1,
		"CLEARING_STATE_ACCEPTED":                          2,
		"CLEARING_STATE_FAILED":                            3,
		"CLEARING_STATE_INITIATOR_FUNDED":                  4,
		"CLEARING_STATE_FUNDED":                            5,
		"CLEARING_STATE_OPERATIONAL":                       6,
		"CLEARING_STATE_ISSUING_MARGIN_CALL":               7,
		"CLEARING_STATE_PROCESSING_MARGIN_CALL":            8,
		"CLEARING_STATE_ACTIVE_SETTLEMENT":                 9,
		"CLEARING_STATE_ISSUING_POST_SETTLEMENT_MARGIN":    10,
		"CLEARING_STATE_PROCESSING_POST_SETTLEMENT_MARGIN": 11,
		"CLEARING_STATE_CHALLENGING":                       12,
		"CLEARING_STATE_FINALIZING":                        13,
		"CLEARING_STATE_WITHDRAWING":                       14,
		"CLEARING_STATE_CONCLUDING":                        15,
		"CLEARING_STATE_DEFAULT":                           16,
	}
)

func (x ClearingState) Enum() *ClearingState {
	p := new(ClearingState)
	*p = x
	return p
}

func (x ClearingState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClearingState) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_enumTypes[1].Descriptor()
}

func (ClearingState) Type() protoreflect.EnumType {
	return &file_operator_proto_enumTypes[1]
}

func (x ClearingState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClearingState.Descriptor instead.
func (ClearingState) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{1}
}

type VersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{0}
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{1}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetChallengeRequest) Reset() {
	*x = GetChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengeRequest) ProtoMessage() {}

func (x *GetChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengeRequest.ProtoReflect.Descriptor instead.
func (*GetChallengeRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{2}
}

func (x *GetChallengeRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetChallengeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge string `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *GetChallengeResponse) Reset() {
	*x = GetChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengeResponse) ProtoMessage() {}

func (x *GetChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengeResponse.ProtoReflect.Descriptor instead.
func (*GetChallengeResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{3}
}

func (x *GetChallengeResponse) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

type AuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Address   *Address `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{4}
}

func (x *AuthenticateRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AuthenticateRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

type AuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt string `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{5}
}

func (x *AuthenticateResponse) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

type TradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade *Trade `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
}

func (x *TradeRequest) Reset() {
	*x = TradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeRequest) ProtoMessage() {}

func (x *TradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeRequest.ProtoReflect.Descriptor instead.
func (*TradeRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{6}
}

func (x *TradeRequest) GetTrade() *Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

type TradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade *Trade `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
}

func (x *TradeResponse) Reset() {
	*x = TradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeResponse) ProtoMessage() {}

func (x *TradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeResponse.ProtoReflect.Descriptor instead.
func (*TradeResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{7}
}

func (x *TradeResponse) GetTrade() *Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

// Maximum number of trades per request is 6765
type TradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *TradesRequest) Reset() {
	*x = TradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradesRequest) ProtoMessage() {}

func (x *TradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradesRequest.ProtoReflect.Descriptor instead.
func (*TradesRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{8}
}

func (x *TradesRequest) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type TradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TradesResponse) Reset() {
	*x = TradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradesResponse) ProtoMessage() {}

func (x *TradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradesResponse.ProtoReflect.Descriptor instead.
func (*TradesResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{9}
}

type OpenChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer          *Peer  `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	MarginDeposit string `protobuf:"bytes,2,opt,name=margin_deposit,json=marginDeposit,proto3" json:"margin_deposit,omitempty"`
}

func (x *OpenChannelRequest) Reset() {
	*x = OpenChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenChannelRequest) ProtoMessage() {}

func (x *OpenChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenChannelRequest.ProtoReflect.Descriptor instead.
func (*OpenChannelRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{10}
}

func (x *OpenChannelRequest) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *OpenChannelRequest) GetMarginDeposit() string {
	if x != nil {
		return x.MarginDeposit
	}
	return ""
}

type OpenChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *OpenChannelResponse) Reset() {
	*x = OpenChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenChannelResponse) ProtoMessage() {}

func (x *OpenChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenChannelResponse.ProtoReflect.Descriptor instead.
func (*OpenChannelResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{11}
}

func (x *OpenChannelResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetJwtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *GetJwtRequest) Reset() {
	*x = GetJwtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJwtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJwtRequest) ProtoMessage() {}

func (x *GetJwtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJwtRequest.ProtoReflect.Descriptor instead.
func (*GetJwtRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{12}
}

func (x *GetJwtRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetJwtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt string `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *GetJwtResponse) Reset() {
	*x = GetJwtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJwtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJwtResponse) ProtoMessage() {}

func (x *GetJwtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJwtResponse.ProtoReflect.Descriptor instead.
func (*GetJwtResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{13}
}

func (x *GetJwtResponse) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

type CloseChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *CloseChannelRequest) Reset() {
	*x = CloseChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseChannelRequest) ProtoMessage() {}

func (x *CloseChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseChannelRequest.ProtoReflect.Descriptor instead.
func (*CloseChannelRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{14}
}

func (x *CloseChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type CloseChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseChannelResponse) Reset() {
	*x = CloseChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseChannelResponse) ProtoMessage() {}

func (x *CloseChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseChannelResponse.ProtoReflect.Descriptor instead.
func (*CloseChannelResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{15}
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{16}
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Notification:
	//
	//	*Notification_StreamNotification
	//	*Notification_SettlementNotification
	//	*Notification_PositionNotification
	//	*Notification_ErrorNotification
	//	*Notification_TransactionNotification
	//	*Notification_SessionKeyTransactionNotification
	//	*Notification_RecordTradeNotification
	Notification isNotification_Notification `protobuf_oneof:"notification"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{17}
}

func (m *Notification) GetNotification() isNotification_Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

func (x *Notification) GetStreamNotification() *StreamNotification {
	if x, ok := x.GetNotification().(*Notification_StreamNotification); ok {
		return x.StreamNotification
	}
	return nil
}

func (x *Notification) GetSettlementNotification() *SettlementNotification {
	if x, ok := x.GetNotification().(*Notification_SettlementNotification); ok {
		return x.SettlementNotification
	}
	return nil
}

func (x *Notification) GetPositionNotification() *PositionNotification {
	if x, ok := x.GetNotification().(*Notification_PositionNotification); ok {
		return x.PositionNotification
	}
	return nil
}

func (x *Notification) GetErrorNotification() *ErrorNotification {
	if x, ok := x.GetNotification().(*Notification_ErrorNotification); ok {
		return x.ErrorNotification
	}
	return nil
}

func (x *Notification) GetTransactionNotification() *TransactionNotification {
	if x, ok := x.GetNotification().(*Notification_TransactionNotification); ok {
		return x.TransactionNotification
	}
	return nil
}

func (x *Notification) GetSessionKeyTransactionNotification() *SessionKeyTransactionNotification {
	if x, ok := x.GetNotification().(*Notification_SessionKeyTransactionNotification); ok {
		return x.SessionKeyTransactionNotification
	}
	return nil
}

func (x *Notification) GetRecordTradeNotification() *RecordTradeNotification {
	if x, ok := x.GetNotification().(*Notification_RecordTradeNotification); ok {
		return x.RecordTradeNotification
	}
	return nil
}

type isNotification_Notification interface {
	isNotification_Notification()
}

type Notification_StreamNotification struct {
	StreamNotification *StreamNotification `protobuf:"bytes,1,opt,name=stream_notification,json=streamNotification,proto3,oneof"`
}

type Notification_SettlementNotification struct {
	SettlementNotification *SettlementNotification `protobuf:"bytes,2,opt,name=settlement_notification,json=settlementNotification,proto3,oneof"`
}

type Notification_PositionNotification struct {
	PositionNotification *PositionNotification `protobuf:"bytes,3,opt,name=position_notification,json=positionNotification,proto3,oneof"`
}

type Notification_ErrorNotification struct {
	ErrorNotification *ErrorNotification `protobuf:"bytes,4,opt,name=error_notification,json=errorNotification,proto3,oneof"`
}

type Notification_TransactionNotification struct {
	TransactionNotification *TransactionNotification `protobuf:"bytes,5,opt,name=transaction_notification,json=transactionNotification,proto3,oneof"`
}

type Notification_SessionKeyTransactionNotification struct {
	SessionKeyTransactionNotification *SessionKeyTransactionNotification `protobuf:"bytes,6,opt,name=session_key_transaction_notification,json=sessionKeyTransactionNotification,proto3,oneof"`
}

type Notification_RecordTradeNotification struct {
	RecordTradeNotification *RecordTradeNotification `protobuf:"bytes,7,opt,name=record_trade_notification,json=recordTradeNotification,proto3,oneof"`
}

func (*Notification_StreamNotification) isNotification_Notification() {}

func (*Notification_SettlementNotification) isNotification_Notification() {}

func (*Notification_PositionNotification) isNotification_Notification() {}

func (*Notification_ErrorNotification) isNotification_Notification() {}

func (*Notification_TransactionNotification) isNotification_Notification() {}

func (*Notification_SessionKeyTransactionNotification) isNotification_Notification() {}

func (*Notification_RecordTradeNotification) isNotification_Notification() {}

type StreamNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId              string          `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Event                  ClearingEvent   `protobuf:"varint,2,opt,name=event,proto3,enum=ClearingEvent" json:"event,omitempty"`
	State                  ClearingState   `protobuf:"varint,3,opt,name=state,proto3,enum=ClearingState" json:"state,omitempty"`
	MyRole                 ProtocolIndex   `protobuf:"varint,4,opt,name=my_role,json=myRole,proto3,enum=core.ProtocolIndex" json:"my_role,omitempty"`
	Peer                   *Peer           `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	MarginLimitType        MarginLimitType `protobuf:"varint,6,opt,name=margin_limit_type,json=marginLimitType,proto3,enum=core.MarginLimitType" json:"margin_limit_type,omitempty"`
	MarginDeposit          string          `protobuf:"bytes,7,opt,name=margin_deposit,json=marginDeposit,proto3" json:"margin_deposit,omitempty"`
	InitiatorMarginBalance string          `protobuf:"bytes,8,opt,name=initiator_margin_balance,json=initiatorMarginBalance,proto3" json:"initiator_margin_balance,omitempty"` // margin updates will be reflected here
	FollowerMarginBalance  string          `protobuf:"bytes,9,opt,name=follower_margin_balance,json=followerMarginBalance,proto3" json:"follower_margin_balance,omitempty"`    // margin updates will be reflected here
	TurnNum                uint64          `protobuf:"varint,10,opt,name=turn_num,json=turnNum,proto3" json:"turn_num,omitempty"`
	ClearingSmState        ClearingSMState `protobuf:"varint,11,opt,name=clearing_sm_state,json=clearingSmState,proto3,enum=state_machine.ClearingSMState" json:"clearing_sm_state,omitempty"`
}

func (x *StreamNotification) Reset() {
	*x = StreamNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamNotification) ProtoMessage() {}

func (x *StreamNotification) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamNotification.ProtoReflect.Descriptor instead.
func (*StreamNotification) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{18}
}

func (x *StreamNotification) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *StreamNotification) GetEvent() ClearingEvent {
	if x != nil {
		return x.Event
	}
	return ClearingEvent_CLEARING_EVENT_UNSPECIFIED
}

func (x *StreamNotification) GetState() ClearingState {
	if x != nil {
		return x.State
	}
	return ClearingState_CLEARING_STATE_UNSPECIFIED
}

func (x *StreamNotification) GetMyRole() ProtocolIndex {
	if x != nil {
		return x.MyRole
	}
	return ProtocolIndex_PROTOCOL_INDEX_UNSPECIFIED
}

func (x *StreamNotification) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *StreamNotification) GetMarginLimitType() MarginLimitType {
	if x != nil {
		return x.MarginLimitType
	}
	return MarginLimitType_MARGIN_LIMIT_TYPE_UNSPECIFIED
}

func (x *StreamNotification) GetMarginDeposit() string {
	if x != nil {
		return x.MarginDeposit
	}
	return ""
}

func (x *StreamNotification) GetInitiatorMarginBalance() string {
	if x != nil {
		return x.InitiatorMarginBalance
	}
	return ""
}

func (x *StreamNotification) GetFollowerMarginBalance() string {
	if x != nil {
		return x.FollowerMarginBalance
	}
	return ""
}

func (x *StreamNotification) GetTurnNum() uint64 {
	if x != nil {
		return x.TurnNum
	}
	return 0
}

func (x *StreamNotification) GetClearingSmState() ClearingSMState {
	if x != nil {
		return x.ClearingSmState
	}
	return ClearingSMState_CLEARING_SMSTATE_UNSPECIFIED
}

type SettlementNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId       string            `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	SettlementState SettlementState   `protobuf:"varint,2,opt,name=settlement_state,json=settlementState,proto3,enum=settlement.SettlementState" json:"settlement_state,omitempty"`
	Markets         []*Market         `protobuf:"bytes,3,rep,name=markets,proto3" json:"markets,omitempty"`
	Ledger          *SettlementLedger `protobuf:"bytes,4,opt,name=ledger,proto3" json:"ledger,omitempty"`
}

func (x *SettlementNotification) Reset() {
	*x = SettlementNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementNotification) ProtoMessage() {}

func (x *SettlementNotification) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementNotification.ProtoReflect.Descriptor instead.
func (*SettlementNotification) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{19}
}

func (x *SettlementNotification) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *SettlementNotification) GetSettlementState() SettlementState {
	if x != nil {
		return x.SettlementState
	}
	return SettlementState_SETTLEMENT_STATE_UNSPECIFIED
}

func (x *SettlementNotification) GetMarkets() []*Market {
	if x != nil {
		return x.Markets
	}
	return nil
}

func (x *SettlementNotification) GetLedger() *SettlementLedger {
	if x != nil {
		return x.Ledger
	}
	return nil
}

type PositionNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Position `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *PositionNotification) Reset() {
	*x = PositionNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionNotification) ProtoMessage() {}

func (x *PositionNotification) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionNotification.ProtoReflect.Descriptor instead.
func (*PositionNotification) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{20}
}

func (x *PositionNotification) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

type TransactionNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To   string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TransactionNotification) Reset() {
	*x = TransactionNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionNotification) ProtoMessage() {}

func (x *TransactionNotification) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionNotification.ProtoReflect.Descriptor instead.
func (*TransactionNotification) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{21}
}

func (x *TransactionNotification) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransactionNotification) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ErrorNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg      string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Metadata *ErrorMetadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Action   string         `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *ErrorNotification) Reset() {
	*x = ErrorNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorNotification) ProtoMessage() {}

func (x *ErrorNotification) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorNotification.ProtoReflect.Descriptor instead.
func (*ErrorNotification) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{22}
}

func (x *ErrorNotification) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ErrorNotification) GetMetadata() *ErrorMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ErrorNotification) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type SessionKeyTransactionNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncompleteUserop *IncompleteUserOp       `protobuf:"bytes,1,opt,name=incomplete_userop,json=incompleteUserop,proto3" json:"incomplete_userop,omitempty"`
	EnableSigOffset  uint64                  `protobuf:"varint,2,opt,name=enable_sig_offset,json=enableSigOffset,proto3" json:"enable_sig_offset,omitempty"`
	DigestHash       string                  `protobuf:"bytes,3,opt,name=digest_hash,json=digestHash,proto3" json:"digest_hash,omitempty"`
	Permissions      []*SessionKeyPermission `protobuf:"bytes,4,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *SessionKeyTransactionNotification) Reset() {
	*x = SessionKeyTransactionNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionKeyTransactionNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionKeyTransactionNotification) ProtoMessage() {}

func (x *SessionKeyTransactionNotification) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionKeyTransactionNotification.ProtoReflect.Descriptor instead.
func (*SessionKeyTransactionNotification) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{23}
}

func (x *SessionKeyTransactionNotification) GetIncompleteUserop() *IncompleteUserOp {
	if x != nil {
		return x.IncompleteUserop
	}
	return nil
}

func (x *SessionKeyTransactionNotification) GetEnableSigOffset() uint64 {
	if x != nil {
		return x.EnableSigOffset
	}
	return 0
}

func (x *SessionKeyTransactionNotification) GetDigestHash() string {
	if x != nil {
		return x.DigestHash
	}
	return ""
}

func (x *SessionKeyTransactionNotification) GetPermissions() []*SessionKeyPermission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type RecordTradeNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade        *Trade `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
	RevertReason string `protobuf:"bytes,2,opt,name=revert_reason,json=revertReason,proto3" json:"revert_reason,omitempty"`
}

func (x *RecordTradeNotification) Reset() {
	*x = RecordTradeNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordTradeNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordTradeNotification) ProtoMessage() {}

func (x *RecordTradeNotification) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordTradeNotification.ProtoReflect.Descriptor instead.
func (*RecordTradeNotification) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{24}
}

func (x *RecordTradeNotification) GetTrade() *Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

func (x *RecordTradeNotification) GetRevertReason() string {
	if x != nil {
		return x.RevertReason
	}
	return ""
}

type SettlementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId     string        `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	PaymentMethod PaymentMethod `protobuf:"varint,2,opt,name=payment_method,json=paymentMethod,proto3,enum=settlement.PaymentMethod" json:"payment_method,omitempty"`
	ChainId       uint64        `protobuf:"varint,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Markets       []*Market     `protobuf:"bytes,4,rep,name=markets,proto3" json:"markets,omitempty"`
}

func (x *SettlementRequest) Reset() {
	*x = SettlementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementRequest) ProtoMessage() {}

func (x *SettlementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementRequest.ProtoReflect.Descriptor instead.
func (*SettlementRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{25}
}

func (x *SettlementRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *SettlementRequest) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_PAYMENT_METHOD_UNSPECIFIED
}

func (x *SettlementRequest) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *SettlementRequest) GetMarkets() []*Market {
	if x != nil {
		return x.Markets
	}
	return nil
}

type SettlementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SettlementResponse) Reset() {
	*x = SettlementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementResponse) ProtoMessage() {}

func (x *SettlementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementResponse.ProtoReflect.Descriptor instead.
func (*SettlementResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{26}
}

type GetPositionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *GetPositionsRequest) Reset() {
	*x = GetPositionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionsRequest) ProtoMessage() {}

func (x *GetPositionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionsRequest.ProtoReflect.Descriptor instead.
func (*GetPositionsRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{27}
}

func (x *GetPositionsRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetPositionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string      `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Positions []*Position `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
}

func (x *GetPositionsResponse) Reset() {
	*x = GetPositionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionsResponse) ProtoMessage() {}

func (x *GetPositionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionsResponse.ProtoReflect.Descriptor instead.
func (*GetPositionsResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{28}
}

func (x *GetPositionsResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *GetPositionsResponse) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

type GetActiveClearStreamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetActiveClearStreamsRequest) Reset() {
	*x = GetActiveClearStreamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveClearStreamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveClearStreamsRequest) ProtoMessage() {}

func (x *GetActiveClearStreamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveClearStreamsRequest.ProtoReflect.Descriptor instead.
func (*GetActiveClearStreamsRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{29}
}

type GetActiveClearStreamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClearStreams []*ClearStream `protobuf:"bytes,1,rep,name=clear_streams,json=clearStreams,proto3" json:"clear_streams,omitempty"`
}

func (x *GetActiveClearStreamsResponse) Reset() {
	*x = GetActiveClearStreamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActiveClearStreamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveClearStreamsResponse) ProtoMessage() {}

func (x *GetActiveClearStreamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveClearStreamsResponse.ProtoReflect.Descriptor instead.
func (*GetActiveClearStreamsResponse) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{30}
}

func (x *GetActiveClearStreamsResponse) GetClearStreams() []*ClearStream {
	if x != nil {
		return x.ClearStreams
	}
	return nil
}

type ErrorMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	State     string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Event     string `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *ErrorMetadata) Reset() {
	*x = ErrorMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMetadata) ProtoMessage() {}

func (x *ErrorMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMetadata.ProtoReflect.Descriptor instead.
func (*ErrorMetadata) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{31}
}

func (x *ErrorMetadata) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ErrorMetadata) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ErrorMetadata) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

var File_operator_proto protoreflect.FileDescriptor

var file_operator_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x10, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x22,
	0x5c, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x28, 0x0a,
	0x14, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x22, 0x31, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x0d, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x22, 0x34,
	0x0a, 0x0d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x22, 0x34, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4a, 0x77, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4a, 0x77, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a,
	0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x22, 0x34, 0x0a,
	0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xf3, 0x04, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x13, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x17, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x15,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x12, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x55, 0x0a, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x75, 0x0a, 0x24, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x21, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a,
	0x19, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x04, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x79, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x06, 0x6d,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x11, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12,
	0x38, 0x0a, 0x18, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x4a, 0x0a, 0x11,
	0x63, 0x6c, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x4d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x53, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x52, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x17,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a, 0x11, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe9, 0x01, 0x0a, 0x21, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x11,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6f,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6f, 0x70, 0x12, 0x2a, 0x0a, 0x11,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x69, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x61, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x22,
	0x14, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x5f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x0c, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x22, 0x5a, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2a, 0xb9, 0x05,
	0x0a, 0x0d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x1a, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a,
	0x15, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4c, 0x45, 0x41,
	0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x41, 0x54, 0x4f, 0x52, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x23, 0x0a,
	0x1f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x44,
	0x10, 0x05, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x46, 0x55, 0x4e, 0x44, 0x5f, 0x50, 0x52,
	0x4f, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x06, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4c, 0x45, 0x41,
	0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x47, 0x52, 0x45, 0x45,
	0x44, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x46, 0x55, 0x4e, 0x44, 0x10, 0x07, 0x12,
	0x26, 0x0a, 0x22, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x08, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x4c, 0x45, 0x41, 0x52,
	0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53,
	0x53, 0x5f, 0x4d, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x09, 0x12,
	0x25, 0x0a, 0x21, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x10, 0x0a, 0x12, 0x31, 0x0a, 0x2d, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49,
	0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x5f, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x4d, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x10, 0x0b, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x4c, 0x45,
	0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x41,
	0x4c, 0x49, 0x5a, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x0c, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x0d, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4c, 0x45, 0x41, 0x52,
	0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45,
	0x4e, 0x47, 0x45, 0x10, 0x0e, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e,
	0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45,
	0x10, 0x0f, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x10, 0x10, 0x12,
	0x22, 0x0a, 0x1e, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47,
	0x45, 0x10, 0x11, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x5f, 0x43, 0x48,
	0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x45, 0x10, 0x12, 0x2a, 0xe4, 0x04, 0x0a, 0x0d, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x43,
	0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x43,
	0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e,
	0x53, 0x54, 0x41, 0x4e, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17,
	0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41,
	0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4c, 0x45,
	0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x4f, 0x52,
	0x5f, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4c, 0x45,
	0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x55, 0x4e, 0x44,
	0x45, 0x44, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x41, 0x4c, 0x10, 0x06, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x49, 0x4e, 0x47, 0x5f, 0x4d,
	0x41, 0x52, 0x47, 0x49, 0x4e, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x07, 0x12, 0x29, 0x0a, 0x25,
	0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50,
	0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x41, 0x52, 0x47, 0x49, 0x4e,
	0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x08, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4c, 0x45, 0x41, 0x52,
	0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x09, 0x12, 0x31, 0x0a,
	0x2d, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x49, 0x53, 0x53, 0x55, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x45, 0x54,
	0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x10, 0x0a,
	0x12, 0x34, 0x0a, 0x30, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f,
	0x53, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41,
	0x52, 0x47, 0x49, 0x4e, 0x10, 0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e,
	0x47, 0x49, 0x4e, 0x47, 0x10, 0x0c, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a,
	0x49, 0x4e, 0x47, 0x10, 0x0d, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57,
	0x49, 0x4e, 0x47, 0x10, 0x0e, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x0f, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x10,
	0x32, 0xcf, 0x05, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2f, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x14,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x13, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4a, 0x77, 0x74, 0x12, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x77, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x77, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0d, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x14, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x11,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x30, 0x01, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2d, 0x33, 0x2f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x70, 0x6f,
	0x72, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_operator_proto_rawDescOnce sync.Once
	file_operator_proto_rawDescData = file_operator_proto_rawDesc
)

func file_operator_proto_rawDescGZIP() []byte {
	file_operator_proto_rawDescOnce.Do(func() {
		file_operator_proto_rawDescData = protoimpl.X.CompressGZIP(file_operator_proto_rawDescData)
	})
	return file_operator_proto_rawDescData
}

var file_operator_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_operator_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_operator_proto_goTypes = []interface{}{
	(ClearingEvent)(0),                        // 0: ClearingEvent
	(ClearingState)(0),                        // 1: ClearingState
	(*VersionRequest)(nil),                    // 2: VersionRequest
	(*VersionResponse)(nil),                   // 3: VersionResponse
	(*GetChallengeRequest)(nil),               // 4: GetChallengeRequest
	(*GetChallengeResponse)(nil),              // 5: GetChallengeResponse
	(*AuthenticateRequest)(nil),               // 6: AuthenticateRequest
	(*AuthenticateResponse)(nil),              // 7: AuthenticateResponse
	(*TradeRequest)(nil),                      // 8: TradeRequest
	(*TradeResponse)(nil),                     // 9: TradeResponse
	(*TradesRequest)(nil),                     // 10: TradesRequest
	(*TradesResponse)(nil),                    // 11: TradesResponse
	(*OpenChannelRequest)(nil),                // 12: OpenChannelRequest
	(*OpenChannelResponse)(nil),               // 13: OpenChannelResponse
	(*GetJwtRequest)(nil),                     // 14: GetJwtRequest
	(*GetJwtResponse)(nil),                    // 15: GetJwtResponse
	(*CloseChannelRequest)(nil),               // 16: CloseChannelRequest
	(*CloseChannelResponse)(nil),              // 17: CloseChannelResponse
	(*SubscribeRequest)(nil),                  // 18: SubscribeRequest
	(*Notification)(nil),                      // 19: Notification
	(*StreamNotification)(nil),                // 20: StreamNotification
	(*SettlementNotification)(nil),            // 21: SettlementNotification
	(*PositionNotification)(nil),              // 22: PositionNotification
	(*TransactionNotification)(nil),           // 23: TransactionNotification
	(*ErrorNotification)(nil),                 // 24: ErrorNotification
	(*SessionKeyTransactionNotification)(nil), // 25: SessionKeyTransactionNotification
	(*RecordTradeNotification)(nil),           // 26: RecordTradeNotification
	(*SettlementRequest)(nil),                 // 27: SettlementRequest
	(*SettlementResponse)(nil),                // 28: SettlementResponse
	(*GetPositionsRequest)(nil),               // 29: GetPositionsRequest
	(*GetPositionsResponse)(nil),              // 30: GetPositionsResponse
	(*GetActiveClearStreamsRequest)(nil),      // 31: GetActiveClearStreamsRequest
	(*GetActiveClearStreamsResponse)(nil),     // 32: GetActiveClearStreamsResponse
	(*ErrorMetadata)(nil),                     // 33: ErrorMetadata
	(*Address)(nil),                           // 34: core.Address
	(*Trade)(nil),                             // 35: core.Trade
	(*Peer)(nil),                              // 36: auth.Peer
	(ProtocolIndex)(0),                        // 37: core.ProtocolIndex
	(MarginLimitType)(0),                      // 38: core.MarginLimitType
	(ClearingSMState)(0),                      // 39: state_machine.ClearingSMState
	(SettlementState)(0),                      // 40: settlement.SettlementState
	(*Market)(nil),                            // 41: core.Market
	(*SettlementLedger)(nil),                  // 42: settlement.SettlementLedger
	(*Position)(nil),                          // 43: core.Position
	(*IncompleteUserOp)(nil),                  // 44: IncompleteUserOp
	(*SessionKeyPermission)(nil),              // 45: SessionKeyPermission
	(PaymentMethod)(0),                        // 46: settlement.PaymentMethod
	(*ClearStream)(nil),                       // 47: clear_stream.ClearStream
}
var file_operator_proto_depIdxs = []int32{
	34, // 0: GetChallengeRequest.address:type_name -> core.Address
	34, // 1: AuthenticateRequest.address:type_name -> core.Address
	35, // 2: TradeRequest.trade:type_name -> core.Trade
	35, // 3: TradeResponse.trade:type_name -> core.Trade
	35, // 4: TradesRequest.trades:type_name -> core.Trade
	36, // 5: OpenChannelRequest.peer:type_name -> auth.Peer
	20, // 6: Notification.stream_notification:type_name -> StreamNotification
	21, // 7: Notification.settlement_notification:type_name -> SettlementNotification
	22, // 8: Notification.position_notification:type_name -> PositionNotification
	24, // 9: Notification.error_notification:type_name -> ErrorNotification
	23, // 10: Notification.transaction_notification:type_name -> TransactionNotification
	25, // 11: Notification.session_key_transaction_notification:type_name -> SessionKeyTransactionNotification
	26, // 12: Notification.record_trade_notification:type_name -> RecordTradeNotification
	0,  // 13: StreamNotification.event:type_name -> ClearingEvent
	1,  // 14: StreamNotification.state:type_name -> ClearingState
	37, // 15: StreamNotification.my_role:type_name -> core.ProtocolIndex
	36, // 16: StreamNotification.peer:type_name -> auth.Peer
	38, // 17: StreamNotification.margin_limit_type:type_name -> core.MarginLimitType
	39, // 18: StreamNotification.clearing_sm_state:type_name -> state_machine.ClearingSMState
	40, // 19: SettlementNotification.settlement_state:type_name -> settlement.SettlementState
	41, // 20: SettlementNotification.markets:type_name -> core.Market
	42, // 21: SettlementNotification.ledger:type_name -> settlement.SettlementLedger
	43, // 22: PositionNotification.position:type_name -> core.Position
	33, // 23: ErrorNotification.metadata:type_name -> ErrorMetadata
	44, // 24: SessionKeyTransactionNotification.incomplete_userop:type_name -> IncompleteUserOp
	45, // 25: SessionKeyTransactionNotification.permissions:type_name -> SessionKeyPermission
	35, // 26: RecordTradeNotification.trade:type_name -> core.Trade
	46, // 27: SettlementRequest.payment_method:type_name -> settlement.PaymentMethod
	41, // 28: SettlementRequest.markets:type_name -> core.Market
	43, // 29: GetPositionsResponse.positions:type_name -> core.Position
	47, // 30: GetActiveClearStreamsResponse.clear_streams:type_name -> clear_stream.ClearStream
	2,  // 31: Operator.GetVersion:input_type -> VersionRequest
	4,  // 32: Operator.GetChallenge:input_type -> GetChallengeRequest
	6,  // 33: Operator.Authenticate:input_type -> AuthenticateRequest
	12, // 34: Operator.OpenChannel:input_type -> OpenChannelRequest
	14, // 35: Operator.GetChannelJwt:input_type -> GetJwtRequest
	29, // 36: Operator.GetPositions:input_type -> GetPositionsRequest
	31, // 37: Operator.GetActiveClearStreams:input_type -> GetActiveClearStreamsRequest
	8,  // 38: Operator.RecordTrade:input_type -> TradeRequest
	10, // 39: Operator.RecordTrades:input_type -> TradesRequest
	27, // 40: Operator.RequestSettlement:input_type -> SettlementRequest
	16, // 41: Operator.CloseChannel:input_type -> CloseChannelRequest
	18, // 42: Operator.SubscribeChannelsEvents:input_type -> SubscribeRequest
	3,  // 43: Operator.GetVersion:output_type -> VersionResponse
	5,  // 44: Operator.GetChallenge:output_type -> GetChallengeResponse
	7,  // 45: Operator.Authenticate:output_type -> AuthenticateResponse
	13, // 46: Operator.OpenChannel:output_type -> OpenChannelResponse
	15, // 47: Operator.GetChannelJwt:output_type -> GetJwtResponse
	30, // 48: Operator.GetPositions:output_type -> GetPositionsResponse
	32, // 49: Operator.GetActiveClearStreams:output_type -> GetActiveClearStreamsResponse
	9,  // 50: Operator.RecordTrade:output_type -> TradeResponse
	11, // 51: Operator.RecordTrades:output_type -> TradesResponse
	28, // 52: Operator.RequestSettlement:output_type -> SettlementResponse
	17, // 53: Operator.CloseChannel:output_type -> CloseChannelResponse
	19, // 54: Operator.SubscribeChannelsEvents:output_type -> Notification
	43, // [43:55] is the sub-list for method output_type
	31, // [31:43] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_operator_proto_init() }
func file_operator_proto_init() {
	if File_operator_proto != nil {
		return
	}
	file_auth_proto_init()
	file_clear_stream_proto_init()
	file_core_proto_init()
	file_session_key_proto_init()
	file_settlement_proto_init()
	file_state_machine_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_operator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJwtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJwtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionKeyTransactionNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordTradeNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveClearStreamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActiveClearStreamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_operator_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*Notification_StreamNotification)(nil),
		(*Notification_SettlementNotification)(nil),
		(*Notification_PositionNotification)(nil),
		(*Notification_ErrorNotification)(nil),
		(*Notification_TransactionNotification)(nil),
		(*Notification_SessionKeyTransactionNotification)(nil),
		(*Notification_RecordTradeNotification)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_operator_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_operator_proto_goTypes,
		DependencyIndexes: file_operator_proto_depIdxs,
		EnumInfos:         file_operator_proto_enumTypes,
		MessageInfos:      file_operator_proto_msgTypes,
	}.Build()
	File_operator_proto = out.File
	file_operator_proto_rawDesc = nil
	file_operator_proto_goTypes = nil
	file_operator_proto_depIdxs = nil
}
